1. Crie um "Olá mundo!" em C.

#include <stdio.h>

int main(){

	printf("Ola mundo!");

return 0;
}

2. Crie um código em C que pergunta ao usuário o seu nome, e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':

#include <stdio.h>
#include <string.h>

int main(){
char nome[20];
	printf("Digite o seu nome:\n");
	scanf ("%s", nome);

	printf ("Ola, %s", nome);

return 0;
}


3. Apresente os comportamentos do código anterior nos seguintes casos:
(a) Se o usuário insere mais de um nome.
		Digite o seu nome: ana julia
Ola, ana
	(b) Se o usuário insere mais de um nome entre parênteses. 
Digite o seu nome: ana julia
Ola, "eu
	(c) Se é usado um pipe. Por exemplo:
		Digite o seu nome: Ola, Eu
	(d) Se é usado um pipe com mais de um nome. Por exemplo:
		Digite o seu nome: Ola, Eu
	(e) Se é usado um pipe com mais de um nome entre parênteses. Por exemplo:
		Digite o seu nome: Ola, Eu
	(f) Se é usado o redirecionamento de arquivo. Por exemplo:

$ echo Ola mundo cruel! > ola.txt
Um arquivo ola.txt é criado no diretório atual e dentro dele contém a mensagem "Ola mundo cruel!".
$ ./ola_usuario_1 < ola.txt
A seguinte mensagem aparece:
Digite o seu nome: Ola, ola
4.Crie um código em C que recebe o nome do usuário como um argumento de entrada (usando as variáveis argc e *argv[]), e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':

#include <stdio.h>
#include <string.h>

int main(int argc, char *argv[]){
char nome[20];
	printf("Digite o seu nome:");
	scanf ("%s", nome);

	printf ("Ola, %s", nome);

return 0;
}

5. Apresente os comportamentos do código anterior nos seguintes casos:
	(a) Se o usuário insere mais de um nome.
		Digite o seu nome: Eu Mesmo
Ola, Eu
	(b) Se o usuário insere mais de um nome entre parênteses. Por exemplo:
		Digite o seu nome: Eu Mesmo
Ola, "Eu
	(c) Se é usado um pipe. Por exemplo:
		Digite o seu nome:
Ola, Eu
	(d) Se é usado um pipe com mais de um nome. Por exemplo:
		Digite o seu nome:
Ola, Eu
	(e) Se é usado um pipe com mais de um nome entre parênteses. Por exemplo:
		Digite o seu nome:
Ola, Eu
	(f) Se é usado o redirecionamento de arquivo. Por exemplo:
		$ echo Ola mundo cruel! > ola.txt
Um arquivo ola.txt é criado no diretório atual e dentro dele contém a mensagem "Ola mundo cruel!".
$ ./ola_usuario_1 < ola.txt
A seguinte mensagem aparece:
Digite o seu nome: Ola, ola
 

6. Crie um código em C que faz o mesmo que o código da questão 4, e em seguida imprime no terminal quantos valores de entrada foram fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_3':
#include <stdio.h>
#include <string.h>

int main(int argc, char *argv[]){

int tamanho;
char nome[20];
	printf("Digite o seu nome:");
	scanf ("%s", nome);

	tamanho = strlen(nome);

	printf ("\nOla, %s", nome);
	printf ("\nNumero de entradas: %d", tamanho);

return 0;
}

7. Crie um código em C que imprime todos os argumentos de entrada fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_argumentos':

#include <stdio.h>
#include <string.h>

int main(){
char nome[20];
    scanf("%[^\n]s", nome);
    setbuf(stdin, NULL);


printf ("Argumentos: %s", nome);

return 0;
}

8. Crie uma função que retorna a quantidade de caracteres em uma string, usando o seguinte protótipo:

	int Num_Caracs(char *string);

Salve-a em um arquivo separado chamado 'num_caracs.c'. Salve o protótipo em um arquivo chamado 'num_caracs.h'. Compile 'num_caracs.c' para gerar o objeto 'num_caracs.o'.

#include <stdio.h>
#include <string.h>

int Num_Caracs(char *string){
    int total = 0;
    while (string[total] != '\0'){
        total++;
    }
    return total;
}
int main(){

return 0;
}
